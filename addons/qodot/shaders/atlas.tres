[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;

uniform lowp sampler2DArray atlas_array: hint_albedo;
uniform lowp sampler2D atlas_data;

varying lowp vec2 rect_pos;
varying lowp vec2 rect_size;
varying lowp float atlas_w;

void vertex() {
	float u = COLOR.r;
	
	float atlas_depth = float(textureSize(atlas_array, 0).z - 1);
	atlas_w = u * atlas_depth;
	
	vec4 rect = texture(atlas_data, vec2(u, 0.0));
	rect_pos = rect.xy;
	rect_size = rect.zw;
}

void fragment() {
	vec2 world_uv = UV;
	
	float grad = min(rect_size.x, rect_size.y);
	vec2 dx = dFdx(world_uv * grad);
	vec2 dy = dFdy(world_uv * grad);
	
	world_uv = fract(world_uv);
	world_uv *= rect_size;
	world_uv += rect_pos;

	ALBEDO = textureGrad(atlas_array, vec3(world_uv, atlas_w), dx, dy).xyz;
	METALLIC = 0.0;
	SPECULAR = 0.0;
	ROUGHNESS = 1.0;
}"

[resource]
shader = SubResource( 1 )
